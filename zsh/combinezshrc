# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes


autoload -U colors && colors	# Load colors
PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
setopt autocd		# Automatically cd into typed directory.
stty stop undef		# Disable ctrl-s to freeze terminal.
setopt interactive_comments


alias ls='ls --color'

#if [ -e /usr/share/terminfo/x/xterm-256color ]; then
#    export TERM='xterm-256color'
#else
#    export TERM='xterm-color'
#fi

# export MANPATH="/usr/local/man:$MANPATH"
export PATH="/sbin:$PATH"
export PATH="/usr/sbin:$PATH"
export PATH="/usr/bin:$PATH"
#compdef sshfs=scp

#TERM=xterm-256color

# #Thue's emacs keybindings
# bindkey -e
# 
# bindkey "\e[1~" beginning-of-line # Home
# bindkey "\e[4~" end-of-line # End
# bindkey "\e[5~" beginning-of-history # PageUp
# bindkey "\e[6~" end-of-history # PageDown
# bindkey "\e[2~" quoted-insert # Ins
# bindkey "\e[3~" delete-char # Del
# bindkey "\e[5C" forward-word
# bindkey "\eOc" emacs-forward-word
# bindkey "\e[5D" backward-word
# bindkey "\eOd" emacs-backward-word
# bindkey "\e\e[C" forward-word
# bindkey "\e\e[D" backward-word
# bindkey "\e[Z" reverse-menu-complete # Shift+Tab
# # for rxvt
# bindkey "\e[7~" beginning-of-line # Home
# bindkey "\e[8~" end-of-line # End
# # for non RH/Debian xterm, can't hurt for RH/Debian xterm
# bindkey "\eOH" beginning-of-line
# bindkey "\eOF" end-of-line
# # for freebsd console
# bindkey "\e[H" beginning-of-line
# bindkey "\e[F" end-of-line
# # for guake
# bindkey "\eOF" end-of-line
# bindkey "\eOH" beginning-of-line
# bindkey "^[[1;5D" backward-word
# bindkey "^[[1;5C" forward-word
# bindkey "\e[3~" delete-char # Del
# 
# # fix ctrl + right/left
# bindkey '^[[1;5D' backward-word
# bindkey '^[[1;5C' forward-word
# # fix ctrl + delete
# bindkey '^[[3;5~' kill-word
# 
# # allow up and down keys to be used when searching (ctrl + r)
# bindkey '^[[A' up-line-or-search
# bindkey '^[[B' down-line-or-search
# editor=nvim
# # Bind ctrl+x, ctrl+e to open current line in $EDITOR.
# autoload -U edit-command-line
# zle -N edit-command-line
# bindkey '^x^e' edit-command-line

# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.

# vi mode
bindkey -v
export KEYTIMEOUT=5

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[1 q';; # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[1 q"
}
zle -N zle-line-init
echo -ne '\e[1 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[1 q' ;} # Use beam shape cursor for each new prompt.

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp" >/dev/null
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
bindkey -s '^o' 'lfcd\n'

bindkey -s '^a' 'bc -lq\n'

bindkey -s '^f' 'cd "$(dirname "$(fzf)")"\n'

bindkey '^[[P' delete-char

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

alias remove-orphans='pacman -Rns $(pacman -Qtdq)'
alias fixdir='sudo find . -type d -exec chmod 770 {} \;'
alias fixfile='sudo find . -type f -exec chmod 660 {} \;'
alias size-scan='du -sh * | grep -v "/$" | sort -rh'
alias size-scan-hidden='du -sh * .* | grep -v "/$" | sort -rh'
#source ~/.config/private_alias/aliases
alias cmake="cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1"

source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/fzf/completion.zsh
source /usr/share/fzf/key-bindings.zsh

# # Bind alt+s to prepend sudo on current line 
# prepend_sudo() {
#   if [[ "$BUFFER" != su(do|)\ * ]]; then
#     BUFFER="sudo $BUFFER"
#     (( CURSOR += 5 ))
#   fi
# }
# zle -N prepend_sudo
# bindkey '^[s' prepend_sudo
# 
# alias media="tmux a -t cmus"
# alias termcolor="alacritty-colorscheme"
# plugins=(git)
# source $ZSH/oh-my-zsh.sh
# 
# refresh_shell() {
#     if [[ "${EUID}" == "0" ]]; then
#         export PS1="$(print '%{\e[1;31m%}%M%{\e[1;33m%} %c %{\e[1;33m%}%% %{\e[0m%}')" # Root color is red
#     else
#         export PS1="$(print '%{\e[1;32m%}%n@%M%{\e[1;33m%} %c %{\e[1;33m%}%% %{\e[0m%}')"
#     fi
# }

PATH="/home/adramax/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/adramax/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/adramax/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/adramax/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/adramax/perl5"; export PERL_MM_OPT;
alias media="tmux a -t cmus"
#refresh_shell
